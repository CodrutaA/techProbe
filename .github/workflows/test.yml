name: Tests
on:
  workflow_dispatch:
    inputs:
      cypress:
        description: Cypress E2E tests
        required: true
        type: boolean
        default: true
      playwright:
        description: Playwright E2E tests
        required: true
        type: boolean
        default: true
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    name: Unit tests (fake)
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
      - run: echo "Successfull unit tests"

  api-tests:
    name: API tests (fake)
    needs: unit-tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - run: echo "Successfull API tests"

  e2e-playwright-tests:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.playwright
    name: Playwright E2E tests
    needs: api-tests
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Install Playwright Browsers
        run: npm run playwright:install:browsers

      - name: Run Playwright tests
        run: npm test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  e2e-cypress-tests:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.cypress
    name: Cypress E2E tests
    needs: api-tests
    timeout-minutes: 10
    runs-on: ubuntu-latest
    container: cypress/included:12.2.0

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Test
        run: npm run cy

  deploy:
    name: Deploy to TEST (fake)
    needs:
      - unit-tests
      - api-tests
      - e2e-playwright-tests
      - e2e-cypress-tests

    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - run: echo "Deployed to TEST environment"
